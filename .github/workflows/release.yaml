name: Release New Builds

on:
  push:
    tags:
      - v*.*.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true

  release-tracks:
    needs: create-release
    strategy:
      matrix:
        track: [sql, vscode, shell, files, chrome]
    uses: lightrail-ai/lightrail/.github/workflows/release-track.yaml@main
    with:
      directory: ./tracks/${{ matrix.track }}

  release-starter-tracks:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Install dependencies (files)
        working-directory: ./tracks/files
        run: npm install

      - name: Build track (files)
        working-directory: ./tracks/files
        run: npm run build

      - name: Install dependencies (chrome)
        working-directory: ./tracks/chrome
        run: npm install

      - name: Build track (chrome)
        working-directory: ./tracks/chrome
        run: npm run build

      - name: Install dependencies (shell)
        working-directory: ./tracks/shell
        run: npm install

      - name: Build track (shell)
        working-directory: ./tracks/shell
        run: npm run build

      - name: Install dependencies (vscode)
        working-directory: ./tracks/vscode
        run: npm install

      - name: Build track (vscode)
        working-directory: ./tracks/vscode
        run: npm run build

      - name: Install dependencies (sql)
        working-directory: ./tracks/sql
        run: npm install

      - name: Build track (sql)
        working-directory: ./tracks/sql
        run: npm run build

      - name: Make an output directory for assembling zipfile contents
        run: mkdir track-temp && mkdir track-temp/files && mkdir track-temp/chrome && mkdir track-temp/shell && mkdir track-temp/vscode && mkdir track-temp/sql

      - name: Move required files into output directory
        run: |
          mv ./tracks/files/package.json track-temp/files/
          mv ./tracks/files/track-dist track-temp/files/
          mv ./tracks/chrome/package.json track-temp/chrome/
          mv ./tracks/chrome/track-dist track-temp/chrome/
          mv ./tracks/shell/package.json track-temp/shell/
          mv ./tracks/shell/track-dist track-temp/shell/
          mv ./tracks/vscode/package.json track-temp/vscode/
          mv ./tracks/vscode/track-dist track-temp/vscode/
          mv ./tracks/sql/package.json track-temp/sql/
          mv ./tracks/sql/track-dist track-temp/sql/

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        working-directory: ./track-temp
        run: zip -qq -r starter-tracks.zip ./*

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            track-temp/starter-tracks.zip

  release-vscode:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: "npm"
          cache-dependency-path: vscode/package-lock.json

      - name: Install Dependencies
        run: npm --prefix ./vscode install

      - name: Package
        run: yes | npm --prefix ./vscode run package -- -o lightrail-vscode.vsix

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            vscode/lightrail-vscode.vsix

      - name: Deploy to Markeplace
        run: npm --prefix ./vscode run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

  release-chrome:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: "npm"
          cache-dependency-path: chrome/package-lock.json

      - name: Install Dependencies
        run: npm --prefix ./chrome install

      - name: Build
        run: npm --prefix ./chrome run build

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        working-directory: chrome
        run: zip -qq -r lightrail-chrome.zip dist

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            chrome/lightrail-chrome.zip

  release-electron:
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] #windows-latest, ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Configure Node caching
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm --prefix ./core install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: npm --prefix ./core run build:linux

      - name: build-mac
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          APPLETEAMID: ${{ secrets.APPLETEAMID }}
        if: matrix.os == 'macos-latest'
        run: npm --prefix ./core run build:mac

      # - name: build-win
      #   if: matrix.os == 'windows-latest'
      #   run: npm run build:win

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            core/dist/*.exe
            core/dist/*.zip
            core/dist/*.dmg
            core/dist/*.AppImage
            core/dist/*.snap
            core/dist/*.deb
            core/dist/*.rpm
            core/dist/*.tar.gz
            core/dist/*.yml
            core/dist/*.blockmap
